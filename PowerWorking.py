import csv
import os

# ----- CONFIGURE THESE PATHS -----
csv_path = r"C:\Blue Lagoon\My Folders.csv"
new_root = r"C:\Blue Lagoon Processed"

# Create the new root directory if it doesn't exist.
os.makedirs(new_root, exist_ok=True)

# Define the field names that match your CSV columns.
fieldnames = ["File Name", "Size", "Allocated", "Modified", "Attributes", "Files", "Folders"]

dir_count = 0
file_count = 0
processed = 0

with open(csv_path, newline='', encoding='utf-8-sig') as csvfile:
    # Use DictReader with the supplied fieldnames.
    reader = csv.DictReader(csvfile, fieldnames=fieldnames)
    
    # Optional: Skip a header/donation message if it exists.
    first_row = next(reader)
    if first_row["File Name"].startswith("Generated by WizTree") or first_row["File Name"].strip() == "File Name":
        pass  # Skip it
    else:
        reader = [first_row] + list(reader)
    
    for row in reader:
        old_path = row.get("File Name", "").strip()
        if not old_path:
            continue
        
        # Determine if it's a directory based on the CSV fields.
        is_directory = (row.get("Files", "0").strip() != "0" or row.get("Folders", "0").strip() != "0")
        # Force it to be a directory if the path ends with a backslash.
        if old_path.endswith("\\"):
            is_directory = True
        
        # Transform the original path into the new path with the drive letter as a subfolder.
        if len(old_path) >= 2 and old_path[1] == ":":
            drive_letter = old_path[0]  # e.g., "C" or "D"
            rest = old_path[2:]         # skip the colon
            rest = rest.lstrip("\\")    # remove leading backslashes
            new_path = os.path.join(new_root, drive_letter)
            if rest:
                new_path = os.path.join(new_path, rest)
        else:
            new_path = os.path.join(new_root, old_path)
        
        # Optionally skip if the path is just a drive root (e.g., "C:\")
        if len(old_path) == 3 and old_path.endswith("\\"):
            continue

        if is_directory:
            if not os.path.exists(new_path):
                try:
                    os.makedirs(new_path, exist_ok=True)
                    dir_count += 1
                except Exception as e:
                    print(f"Failed to create directory: {new_path} - {e}")
        else:
            parent_dir = os.path.dirname(new_path)
            if not os.path.exists(parent_dir):
                try:
                    os.makedirs(parent_dir, exist_ok=True)
                    dir_count += 1
                except Exception as e:
                    print(f"Failed to create parent directory: {parent_dir} - {e}")
            try:
                open(new_path, "a").close()
                file_count += 1
            except Exception as e:
                print(f"Failed to create file: {new_path} - {e}")
        
        processed += 1
        if processed % 10000 == 0:
            print(f"Processed {processed} items...")

print(f"Done! Created {dir_count} directories and {file_count} files in {new_root}")
